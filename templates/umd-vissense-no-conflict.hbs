 ;(function (root, name, factory) {
  'use strict';
  var document = 'document';

  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define([], function() {
      return function(win) {
        return factory(win, win[document]);
      };
    });
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node. Must provide window like environment
    module.exports = function(win) {
      return factory(win, win[document]);
    };
  } else {
    // Browser globals
    var _oldValue = root[name];
    var _newValue = factory(root, root[document]);

    root[name] = _newValue;

    root[name].noConflict = function() {
      root[name] = _oldValue;

      return _newValue;
    };
  }
}(this, 'VisSense', function (window, document, undefined) {

{{{code}}}
{{#if objectToExport}}
return {{{objectToExport}}};
{{/if}}

}));
