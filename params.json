{"name":"Vissense","tagline":"A utility library for observing visibility changes of DOM elements.","body":"VisSense.js\r\n====\r\n\r\nA utility library for observing visibility changes of DOM elements.\r\nImmediately know when an element becomes hidden, partly visible or fully visible.\r\n\r\nVisSense.js is **lightweight**, **highly extensible** and **easy to use** (very straight forward API). It is **well tested** (100% code coverage!), **documented** and **production-ready** (integrated on websites with > 1 billion impressions/month). Best of all: **No dependencies**.\r\n\r\n#### What it does\r\n * provides methods for detecting visibility of DOM elements\r\n * provides a convenience class for calling isHidden, isVisible, isFullyVisible, percentage\r\n * provides a convenience class for detecting changes in visibility\r\n\r\n#### What it does *not* do\r\n * detect if an element is overlapped by others\r\n * detect if an element is a hidden input element\r\n * take elements opacity into account\r\n * take scrollbars into account - elements \"hidden\" behind scrollbars are considered visible\r\n\r\n\r\n[Demos](https://vissense.github.io/vissense-demo/) and Examples\r\n------------\r\nSee more examples on the [demo page](https://vissense.github.io/vissense-demo/).\r\n\r\nIn this simple example a video is played if at least 75% of its area is in the users viewport:\r\n```javascript\r\nvar video = $('#video'); \r\nvar visibility = VisSense(video[0], { fullyvisible: 0.75 });\r\n\r\nif(visibility.isFullyVisible()) { \r\n  video.play();\r\n}\r\n```\r\n\r\nIn a more advanced example the video is stopped as soon as it is not visible anymore:\r\n```javascript\r\nvar video = $('#video'); \r\nvar visibility = VisSense(video[0], { fullyvisible: 0.75 });\r\n\r\nvar visibility_monitor = visibility.monitor({ \r\n  strategy: new VisSense.VisMon.Strategy.EventStrategy({ debounce: 100 }),\r\n  fullyvisible: function() { \r\n    video.play();\r\n  }, \r\n  hidden: function() { \r\n    video.stop(); \r\n  }\r\n}).start();\r\n```\r\n\r\nDownload\r\n------------\r\n\r\n### Bower\r\nInstall with bower\r\n```\r\nbower install vissense/vissense --save-dev\r\n```\r\n\r\n### Github\r\n[Download from Github](https://github.com/vissense/vissense/releases)\r\n\r\nAdd this `<script>` tag somewhere\r\n```\r\n<script src=\"/path/to/components/vissense/dist/vissense.min.js\"></script>\r\n```\r\n\r\nLicense\r\n-------\r\n\r\nThe project is licensed under the MIT license. See\r\n[LICENSE](https://github.com/vissense/vissense/blob/master/LICENSE) for details.\r\n","google":"UA-48540954-4","note":"Don't delete this file! It's used internally to help with page regeneration."}